name: Rust CI

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build & Test # Consider renaming to "Check" if only cargo check is run
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        # No specific components needed if only cargo check is run,
        # but keeping rustfmt and clippy doesn't hurt for future use.
        with:
          components: clippy, rustfmt

      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/

          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-packages

      - name: Run Cargo Check
        run: cargo check --all-targets --all-features --workspace

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run Clippy
        run: cargo clippy --all-targets --all-features --workspace

      - name: Const Fn Audit
        run: |
          # Run const fn audit to detect opportunities
          if [ -f "scripts/const_fn_audit.sh" ]; then
            chmod +x scripts/const_fn_audit.sh
            ./scripts/const_fn_audit.sh -v || echo "Const fn opportunities detected (non-blocking)"
          else
            echo "Const fn audit script not found, skipping"
          fi
